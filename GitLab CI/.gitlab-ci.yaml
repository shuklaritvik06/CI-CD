variables:
  DOCKER_IMAGE: shuklaritvik06/learning
  DOCKER_IMAGE_TAG: node-app-1.0
stages:
  - build
  - test
  - deploy
run_tests:
  stage: test
  image: node
  before_script:
    - npm i
  script:
    - npm run test
  artifacts:
    untracked: false
    when: on_success
    paths:
      - "build"
    expire_in: 30 days
build_image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker build -t $DOCKER_IMAGE:$DOCKER_IMAGE_TAG .
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker push shuklaritvik06/learning:node-app-1.0
deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD && docker pull shuklaritvik06/learning:node-app-1.0 && docker stop node-app && docker rm node-app && docker rmi shuklaritvik06/learning:current && docker tag shuklaritvik06/learning:node-app-1.0 shuklaritvik06/learning:current && docker run -d --name node-app -p 3000:3000 shuklaritvik06/learning:current"
# read => 4
# write => 2
# execute => 1
# task:
#     stage: deploy
#     image:
#         name: amazon/aws-cli
#         entrypoint: [""]
#     script:
#         - aws --version
#         - echo "Hello" > s3.txt
#         - aws s3 cp s3.txt s3://path/name
